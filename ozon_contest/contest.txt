ХЭШ
Условия
Разработчику складских решений Андрею необходимо создать копию базы данные о заказах и деперсонализировать данные в ней.
На вход приходит текстовая строка, содержащая разделенные пробелом номер заказа, имя, фамилию и стоимость заказа:
order_id first_name second_name price
Необходимо реализовать скрипт на bash (запуск под Ubuntu 20.04), который выведет на выход те же данные, но с хешированными именем и фамилией. Хеширование необходимо осуществлять утилитой sha1sum

Примеры
Вход:
1 Иван Иванов 777


Выход:
1 f9c1c7766ad49ce9b46b23dbdd8a85bb01dffe3a 7af8ec5d9863b938bf49bb79158f0dd141e00e3d 777


Условия
Города
Света любит путешествовать по новым странам. Собираясь в Бразилию, она опросила всех своих знакомых, в каких городах 
Бразилии они были. Каждый город Света обозначила отдельным символом и составила из всех ответов друзей длинную 
текстовую строку. Теперь ей хочется увидеть самый часто посещаемый город. Для этого нужно заменить каждый символ 
строки кроме самого частого на символ "*".
Формат входных данных
В единственной строке задана не пустая строка из строчных латинских букв, длина которой не превышает 100 символов. 
Гарантируется, что среди символов строки есть символ, частота которого строго больше частоты остальных символов.
Формат выходных данных
Выведите искомую строку с замененными символами.
Примеры
Входные данные:
abacaba
Выходные данные:
a*a*a*a

Инверсии
Условия
Антон хочет приобрести велосипед с максимальной выгодой. Выбрав интересную ему модель, продающуюся на разных маркетплейсах, он хочет научиться прогнозировать, как может измениться в будущем цена этой модели на разных торговых площадках, чтобы выбрать наиболее благоприятный момент для покупки. Наиболее благоприятным Антон считает момент, после которого с максимальной вероятностью цена уже не будет снижаться. Для этого он решил ежедневно отслеживать динамику цен на выбранных площадках. Через два месяца у него набралось достаточно данных, чтобы высчитать максимальную величину снижения цены (разницу между максимальной и минимальной ценой за период). Собрав накопленные данные в виде нескольких хронологически упорядоченных массивов цен, Антон решил автоматизировать свою работу и найти программное решение поставленной задачи:

Дан массив из n элементов a_0, a_1, ... a_n-1.

Инверсией в массиве называется любая пара индексов i, j такая, что i < j и при этом a_i > a_j.

Назовем величиной инверсии i, j абсолютную разность соответствующих элементов |a_i - a_j|. Вам требуется найти 
максимальную по величине инверсию в данном массиве.
Формат входных данных
В первой строке входных данных содержится одно целое число n - размер массива (2 <= n <= 10^5).

Во второй строке содержатся n целых чисел a_0, a_1, ... a_{n-1} разделенные пробелом - элементы массива (-10^9 <= a_i <= 10^9).
Формат выходных данных
Выведите одно число - максимальную величину инверсии в данном массиве. Если ни одной инверсии в массиве нет, то выведите 0.
Примеры
Входные данные:
4
3 5 2 1
 
Выходные данные:
4

Общее поле
Условия
Для автоматического поиска похожих товаров в ассортименте маркетплейса Ozon применяются различные методики, среди которых – сравнение по значению характеристик товара. Характеристики для различных товарных групп имеют разную структуру данных, и в общем виде могут быть представлены в формате JSON с произвольной вложенностью полей. На степень похожести товаров в этом случае должны влиять не только значения полей, но и конкретный путь этих полей в структуре JSON. Требуется составить алгоритм, позволяющий оценить степень схожести товаров. Одним из элементов этого алгоритма будет поиск общих полей в двух различных фрагментах JSON.

Вам дано два JSON. Требуется найти в них общее поле такое, что строка характеризующая путь до него наиболее длинная, при этом если таких строк несколько необходимо найти лексикографически наименьшую из них.

Пояснение к примерам
В первом примере у JSON-ов два общих поля с путем длины три: fps и a.z.
При этом a.z лексикографически меньше.

Во втором примере есть очень длинный путь a[2].b[0][0] в первом JSON, однако во втором JSON путь не такой же, а a[1].b[0][0], поэтому это поле не считается общим. 
Формат входных данных
В первой строке задан первый JSON.
Во второй строке задан второй JSON.
Гарантируется, что длина каждой строки не превосходит 3000.
Формат выходных данных
Выведите максимальный по длине, лексикографически наименьший путь до общего поля данных JSON-ов.
Примеры
Входные данные:
{"h":1,"w":2,"fps":30,"a":{"y":"","z":true}}
{"fps":60,"a":{"x":"","z":true}}
 
Выходные данные:
a.z
Входные данные:
{"a":[{"c":1},{"a":1},{"b":[[1]]},{"c":1}]}
{"a":[{"c":1},{"b":[[1]]}]}
 
Выходные данные:
a[0].c


Даты
Условия
Напиши скрипт, который будет получать на вход stdin 2 параметра, d1 и d2 в формате YYYY-MM-DD, и будет считать разницу между этими датами в днях.

Скрипт проверяется на bash 5.1.4 (запуск под Ubuntu 20.04).
Формат входных данных
Две даты через пробел в формате YYYY-MM-DD
Формат выходных данных
Одно целое число - разница в днях
Примеры
Входные данные:
2021-01-01 2022-01-01
Выходные данные:
365


Регионы
Всего тестов: 1Кол-во баллов: 40
Сложность
Условия
После начала пандемии, значительная часть сотрудников центрального офиса Ozon разъехалась по различным регионам страны. Теперь, для того чтобы оптимально использовать рабочее время при проведении онлайн-встреч, нужно учитывать часовой пояс, в котором проживает каждый сотрудник. Для этого специалисту отдела HR необходимо собрать данные по смешанным командам (в которых часть сотрудников живет в Москве, а часть – в других регионах).

Данные о сотрудниках хранятся в таблицах:
local_employees
id	name	second_name
1	Андрей	Иванов
2	Ольга	Смирнова
3	Иван	Иванов

remote_employees
Id	first_name	second_name	region
1	Сергей		Кузнецов	Казань
2	Илья		Фомин		Ижевск
3	Анна		Сергеевна	Казань
4	Артём		Сидоров		Владимир

Напиши запрос, который сгруппирует всех владельцев ПВЗ Ozon в одну таблицу с указанием региона. Для локальных сотрудников указать регион “Москва”. Сортировать всё по региону.

Пример ожидаемого ответа:
Артём  Сидоров  Владимир
Илья   Фомин    Ижевск
Сергей Кузнецов Казань
Анна   Сергеева Казань
Андрей Иванов   Москва
Ольга  Смирнова Москва
Иван   Иванов   Москва


Логистика
Всего тестов: 30Кол-во баллов: 60
Сложность
Условия
В компании-грузоперевозчике составлен маршрут для грузовика (последовательность посещаемых пунктов погрузки/выгрузки). Но маршрут учитывает только географию местности. Теперь нужно скорректировать объемы грузов, которые заказаны в каждой точке, таким образом, чтобы после каждой операции погрузки/выгрузки объем занятого в кузове места "колебался" вокруг заданного значения (например, вокруг половины от всего объема кузова). То есть, если в данный момент объем меньше половины, то после посещения следующей точки он должен стать строго больше половины, и наоборот. Обозначим целыми числами величину заказа (в штуках) в каждой точке маршрута. Положительное число означает погрузку в автомобиль, а отрицательное - выгрузку из автомобиля. Предполагается, что в стартовой точке грузовик заполнен ровно наполовину. Нужно скорректировать объемы заказов на минимально возможные величины таким образом, чтобы удовлетворить заданному условию "колебания" занятого объема. Формально поставленную задачу можно описать следующим образом:

Дан массив из n элементов a_0, a_1, ... a_n-1. Также определим функцию префиксной суммы prefix_sum(i) = a_0 + a_1 + ... + a_i.

Вам разрешено делать с массивом следующие операции:

Увеличить любой элемент массива на единицу
Уменьшить любой элемент массива на единицу

С помощью минимального числа данных операций вам необходимо получить новый массив такой, что любая префиксная сумма prefix_sum(i) либо положительная, либо отрицательная, и при этом для любого i < n - 1 знак prefix_sum(i) должен быть не равен знаку prefix_sum(i + 1).


Пояснение к примерам

В первом примере можно за две операции получить массив [-1, 2, -2].
Во втором тесте массив уже удовлетворяет необходимые условия.

Формат входных данных
В первой строке входных данных содержится одно целое число

n - размер массива (1 < n < 10^5).

Во второй строке содержатся n целых чисел

a_0, a_1, ... a_n-1 разделенные пробелом - элементы массива (-10^9 < a_i < 10^9).

Формат выходных данных
Выведите одно число - минимальное число операций, которые нужно сделать с массивом, чтобы он удовлетворял необходимым условиям.
Примеры
Входные данные:
3 
0 1 -2
Выходные данные:
2
Входные данные:
2 
-5 100
Выходные данные:
0